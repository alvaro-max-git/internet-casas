// Generated by Selenium IDE

package es.upm.dit.isst.ioh_api;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration; // Import Duration

public class HostregistercreateaccesuserTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void hostregistercreateaccesuser() {
    driver.get("http://localhost:5173/register");
    driver.manage().window().setSize(new Dimension(1050, 825));
    driver.findElement(By.id("register-button")).click();
    driver.findElement(By.id("host-register-button")).click();
    driver.findElement(By.name("email")).click();
    driver.findElement(By.name("email")).sendKeys("host@host.com");
    driver.findElement(By.name("password")).sendKeys("1234");
    driver.findElement(By.name("seamApiKey")).click();
    driver.findElement(By.name("seamApiKey")).sendKeys("seam_testKpVb_t1Qiw82sFJRv31ihiqjnVuQh");
    driver.findElement(By.id("host-register-button-confirm")).click();

    // Añadir espera explícita aquí
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10)); // Espera hasta 10 segundos
    WebElement addAccessCard = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".\\_accessCard_1y70k_165")));
    addAccessCard.click();
    
    driver.findElement(By.name("usuario")).click();
    driver.findElement(By.name("usuario")).sendKeys("user@user.com");
    driver.findElement(By.name("color")).click();
    driver.findElement(By.name("color")).sendKeys("#cccccc");
    driver.findElement(By.name("color")).click();
    driver.findElement(By.name("color")).sendKeys("#a8f2a6");
    driver.findElement(By.name("lockId")).click();
    {
      WebElement dropdown = driver.findElement(By.name("lockId"));
      dropdown.findElement(By.xpath("//option[. = 'FRONT DOOR (ID: e8e159cd-e5b8-4efd-b046-85ae462a2496)']")).click();
    }
    driver.findElement(By.cssSelector("option:nth-child(2)")).click();
    driver.findElement(By.name("fechaEntrada")).click();
    driver.findElement(By.name("fechaEntrada")).click();
    driver.findElement(By.name("fechaEntrada")).click();
    driver.findElement(By.name("fechaEntrada")).click();
    driver.findElement(By.name("fechaEntrada")).sendKeys("2025-05-06T16:52");
    driver.findElement(By.name("fechaSalida")).click();
    driver.findElement(By.name("fechaSalida")).click();
    driver.findElement(By.name("fechaSalida")).click();
    driver.findElement(By.name("fechaSalida")).sendKeys("2025-05-09T16:00");
    driver.findElement(By.cssSelector(".\\_button_sylqr_119")).click();
    driver.findElement(By.cssSelector(".\\_hamburgerIcon_1wq2n_95 > path")).click();
    driver.findElement(By.cssSelector(".\\_menuItem2_1wq2n_71 > span")).click();
  }
}
